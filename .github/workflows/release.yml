name: Release App

on:
  release:
    types:
      - created

jobs:
  vars:
    runs-on: ubuntu-latest
    name: Versions
    outputs:
      code: ${{ steps.version_info.outputs.version-code }}
      display: ${{ steps.version_info.outputs.version-display }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Version Info
        id: version_info
        run: |
          echo "Name: ${{ github.event.release.name }} Description: ${{ github.event.release.body }}"
          
          # Extract display version (tag name) and remove leading 'v'
          DISPLAY_VERSION=$(echo "${{ github.event.release.name }}" | sed 's/^v//')         
          echo "version-display=${DISPLAY_VERSION}" >> $GITHUB_OUTPUT
          
          # Extract hidden version code from the release body
          VERSION_CODE=$(echo "${{ github.event.release.body }}" | grep -oP '(?<=<!--version-code:)[^-->]+')          
          echo "version-code=$VERSION_CODE" >> $GITHUB_OUTPUT
      
  build:
    runs-on: ubuntu-latest
    needs: [vars]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 6.0.x
          
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        continue-on-error: true
        with:
          java-version: |
            11
            17
          distribution: 'microsoft'

      - name: Java Version
        run: java -version && echo "JAVA_HOME=${{ env.JAVA_HOME }}"
      
      - name: Setup Android SDK Tools
        uses: android-actions/setup-android@v3.2.0
      
      - name: Set Android SDK 34
        run: echo y | sdkmanager "platforms;android-34"
      
      - name: Restore workloads
        run: |
          dotnet workload restore
          dotnet restore
      
      - name: Build Android
        id: android_build
        run: |
          dotnet publish \
          -c Release \
          -r android-x64 \
          --self-contained \
          -p:AndroidSdkDirectory="${{ env.ANDROID_SDK_ROOT }}" \
          -p:JavaSdkDirectory="C:\hostedtoolcache\windows\Java_Microsoft_jdk\11.0.19\x64" \
          -p:ApplicationVersion=${{ needs.vars.outputs.code}} \
          -p:ApplicationDisplayVersion=${{ needs.vars.outputs.display}} \
          Android/Android.csproj

      - name: Sign AAB
        if: ${{ steps.android_build.outcome == 'success' }}
        id: sign_aab
        run: |
          echo ${{ secrets.SIGNING_KEYSTORE }} | base64 -d > keystore.jks
          echo "aab=Android/bin/Release/net6.0-android/android-x64/publish/io.github.paulushcgcj.theoldladies-${{ needs.vars.outputs.code}}-${{ needs.vars.outputs.display}}.aab" >> $GITHUB_OUTPUT
          jarsigner -verbose \
          -sigalg SHA256withRSA \
          -digestalg SHA-256 \
          -keystore keystore.jks \
          -signedjar Android/bin/Release/net6.0-android/android-x64/publish/io.github.paulushcgcj.theoldladies-${{ needs.vars.outputs.code}}-${{ needs.vars.outputs.display}}.aab \
          Android/bin/Release/net6.0-android/android-x64/publish/io.github.paulushcgcj.theoldladies.aab \
          ${{ secrets.SIGNING_ALIAS }} \
          -storepass '${{ secrets.SIGNING_KEYSTORE_PASSWORD }}'
          
      - name: Report build status
        run: echo "Build status report=${{ job.status }}."

      - name: Upload App Bundle
        uses: actions/upload-artifact@v1
        with:
          name: aab
          path: ${{steps.sign_aab.outputs.aab}}
      